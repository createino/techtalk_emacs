* Emacs at a Glance
** Define
   #+BEGIN_QUOTE
   GNU Emacs is an *extensible*, *customizable* text editorâ€”and
   more. At its core is an interpreter for Emacs Lisp, a dialect of
   the Lisp programming language with extensions to support text
   editing. [fn:1]
   #+END_QUOTE

   #+BEGIN_QUOTE
   Emacs is not an extensible text-editor. It's a programming
   environment with a nice built-in library for editing text. [fn:10]
   #+END_QUOTE
** Emacs Logo

  [[./img/emacs-logo.png]]
** Emacs Creator
  [[./img/creator.png]]

* Why Emacs?
  - Divine Editing Experience [fn:2]
    - custom jump-start
    - keyboard macro
    - clear ring
    - expand-region
    - multi-cursor
    - ace-jump-mode
    - key-chord
  - Everything is possible [ +Almost to be exact+ :) ]
    - good language support [fn:3]
    - breeze org-mode <=> latex support
    - pdf and image viewer [fn:4]
    - chart with graphviz-mode
    - e-mail reader
    - IRC
    - terminal session
    - write blog entry
    - coffee-mode [fn:5]
    - git integration
    - play tetris anyone? :) 
    - M-x phases-of-moon
    - M-x doctor
    - many more...
  - Emacs is extensible [fn:6]
  - Integrates well with lots of external tools
    - shell-mode, ansi-term, eshell
    - dired [fn:7]
    - cvs, svn, bazaar, git, mercurial
    - proced (emacs process manager)
  - Emacs Doesn't let you repeat yourself [fn:6]
  - Emacs is Modern
    - GTK2/3, Coca, WinAPI
    - OSes clipboard support
    - TTF Fonts support [fn:8]
    - apt-get or brew like package manager
  - Emacs is constantly evolving
  - Other prominent tools use Emacs's keybindings
    - bash, zsh, Cocoa toolkit use Emacs keybindings by default
* Emacs vs the World
  - Emacs vs vim

    Emacs pros:
    - it has better default extension language.
    - it's modeless.
    - it has better integration with external systems.
    - it has better support for the things that matter to me. [fn:9]
    - it has a built-in package manager.

    Vim pros:
    - nicer navigation
    - much smaller core and much faster to load
    - very simple initial config
    - it has a more stylish icon than Emacs :)
  - Emacs vs IDEs

    IDEs pros:
    - good refactoring support
    - semantic code analysis
    - integrated GUI debuggers and GUI design tools
    - precise auto-completions
    - good integration with external systems, i.e. version control

    IDEs cons:
    - dependent to the mouse and an X environment
    - not resource efficient
    - IDEs impair your thinking by thinking instead of you

* Getting Started with Emacs
  It +only+ takes 2 steps:
  1. run the built-in Emacs tutorial ~C-h t~
  2. use Emacs day and night for all your work

* My #1 Problem
  - No adequate embedded browser in Emacs!
* Note!
  - *Bagaimanapun juga, apa pun editor Anda, selama Anda merasa
    produktif dan efisien, then it's good...*
  - *Remember, this, of course, is highly subjective :)*

* Dotfile
my [[./demo/.emacs][~/.emacs]] file

* Footnotes
[fn:1] https://www.gnu.org/software/emacs/

[fn:2] [[./demo/demo.txt][demo.txt]] [[./demo/demo.js][demo.js]]

[fn:3] [[./demo/demo.py][demo.py]]

[fn:4] [[./demo/emacs_docs.pdf][pdf]] [[./demo/emacs_learning_curve.jpg][img]]

[fn:5] [[http://en.wikipedia.org/wiki/Hyper_Text_Coffee_Pot_Control_Protocol][wikipedia]]

[fn:6] [[./demo/snippets.el][snippets.el]]

[fn:7] [[./demo/dired_demo][dired_demo]]

[fn:8] [[./demo/arab.txt][arab.txt]]

[fn:9] [[./demo/pdf/tesis.org][tesis.org]] [[./demo/beamer.org][beamer.org]]

[fn:10] https://www.youtube.com/watch?v=EH_KILXupyU&t=11m35s
